name: backend-test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    container: 
      image: python:3.9
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pytania
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2


      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.1.12-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'


      - run: poetry install --no-interaction

      - name: make migrations
        run: poetry run python ./backend/manage.py makemigrations && poetry run python ./backend/manage.py migrate

      - run: poetry run python ./backend/manage.py test app
      - run: poetry run python ./backend/manage.py test users

